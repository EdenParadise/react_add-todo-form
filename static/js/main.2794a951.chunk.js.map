{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","services/getUser.ts","services/newTodoId.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","getUserById","users","find","newTodoId","reduce","maxId","App","useState","setTitle","titleError","setTitleError","currentUser","setCurrentUser","currentUserError","setCurrentUserError","todosFromServer","setTodos","preparedTodos","usersFromServer","action","method","onSubmit","event","preventDefault","trim","prevTodos","htmlFor","type","placeholder","value","onChange","target","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2794a951.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({\n  user: {\n    email,\n    name,\n  },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ninterface Props {\n  todo: TodoWithUser,\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => (\n  <article\n    data-id={id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n\n    <UserInfo user={user} />\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ninterface Props {\n  todos: TodoWithUser[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import { User } from '../types/User';\n\nexport function getUserById(userId: number, users: User[]): User {\n  return users.find(user => user.id === userId) as User;\n}\n","import { Todo } from '../types/Todo';\n\nexport function newTodoId(todos: Todo[]) {\n  return todos.reduce((maxId, todo) => (\n    todo.id > maxId\n      ? todo.id\n      : maxId\n  ), 0) + 1;\n}\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './services/getUser';\nimport { newTodoId } from './services/newTodoId';\nimport { TodoWithUser } from './types/TodoWithUser';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [currentUser, setCurrentUser] = useState(0);\n  const [currentUserError, setCurrentUserError] = useState(false);\n\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const preparedTodos: TodoWithUser[] = todos.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId, usersFromServer),\n  }));\n\n  const reset = () => {\n    setTitle('');\n    setTitleError(false);\n    setCurrentUser(0);\n    setCurrentUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!currentUser) {\n      setCurrentUserError(true);\n    }\n\n    if (title.trim() && currentUser) {\n      setTodos(prevTodos => [\n        ...prevTodos,\n        {\n          id: newTodoId(prevTodos),\n          title,\n          completed: false,\n          userId: currentUser,\n        },\n      ]);\n\n      reset();\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentUser(+event.target.value);\n    setCurrentUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            defaultValue={0}\n            value={currentUser}\n            onChange={handleChangeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {currentUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={preparedTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}